// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = env("PRISMA_PROVIDER")
  url       = env("PRISMA_URL") // uses connection pooling
  directUrl = env("PRISMA_URL_NON_POOLING") // uses a direct connection
}

model Group {
  id           String        @id
  name         String
  currency     String        @default("$")
  participants Participant[]
  expenses     Expense[]
  createdAt    DateTime      @default(now())
}

model Participant {
  id              String           @id
  name            String
  group           Group            @relation(fields: [groupId], references: [id], onDelete: Cascade)
  groupId         String
  expensesPaidBy  Expense[]        @relation("ExpensePayedBy")
  expensesPaidFor ExpensePaidFor[]
  expensesCreated Expense[]        @relation("ExpenseCreatedBy")
}

model Category {
  id       Int       @id @default(autoincrement())
  grouping String
  name     String
  icon     String
  Expense  Expense[]
}

model Expense {
  id            String            @id
  group         Group             @relation(fields: [groupId], references: [id], onDelete: Cascade)
  expenseDate   DateTime          @default(dbgenerated("CURRENT_DATE")) @db.Date
  title         String
  category      Category?         @relation(fields: [categoryId], references: [id])
  categoryId    Int               @default(0)
  amount        Int
  paidBy        Participant       @relation("ExpensePayedBy", fields: [paidById], references: [id], onDelete: Cascade)
  paidById      String
  paidFor       ExpensePaidFor[]
  groupId       String
  expenseType   ExpenseType       @default(EXPENSE)
  splitMode     SplitMode         @default(EVENLY)
  createdBy     Participant?      @relation("ExpenseCreatedBy", fields: [createdById], references: [id], onDelete: SetNull)
  createdById   String?
  createdAt     DateTime          @default(now())
  documents     ExpenseDocument[]
  notes         String?
  prevVersion   Expense?          @relation("ExpenseHistory", fields: [prevVersionId], references: [id])
  nextVersion   Expense?          @relation("ExpenseHistory")
  prevVersionId String?           @unique
  deleted       Boolean           @default(false)

  @@index([deleted])
  @@index([expenseDate])
  @@index([createdAt])
}

model ExpenseDocument {
  id        String   @id
  url       String
  width     Int
  height    Int
  expense   Expense? @relation(fields: [expenseId], references: [id])
  expenseId String?
}

enum ExpenseType {
  EXPENSE
  INCOME
  REIMBURSEMENT
}

enum SplitMode {
  EVENLY
  BY_SHARES
  BY_PERCENTAGE
  BY_AMOUNT
}

model ExpensePaidFor {
  expense       Expense     @relation(fields: [expenseId], references: [id], onDelete: Cascade)
  participant   Participant @relation(fields: [participantId], references: [id], onDelete: Cascade)
  expenseId     String
  participantId String
  shares        Int         @default(1)

  @@id([expenseId, participantId])
}
